events {
    worker_connections 1024;
}

http {
    # 로그 형식 정의
    log_format firewall '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'blocked=$blocked';

    access_log /var/log/nginx/access.log firewall;
    error_log /var/log/nginx/error.log warn;

    # 차단된 요청을 표시하는 변수
    map $remote_addr $blocked {
        default "no";
        ~^172\.21\. "yes";  # 외부 네트워크 차단
    }

    # 내부 네트워크만 허용하는 업스트림
    upstream vllm_internal {
        server vllm-server:8000;
    }

    upstream ollama_internal {
        server ollama-server:11434;
    }

    # 내부 vLLM 서비스 프록시
    server {
        listen 80;
        server_name vllm.internal.local;

        # 내부 네트워크에서만 접근 허용
        allow 172.20.0.0/16;  # 내부 네트워크
        allow 127.0.0.1;      # localhost
        deny all;

        location / {
            proxy_pass http://vllm_internal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 허용 (개발용)
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        # 헬스체크 엔드포인트
        location /health {
            access_log off;
            return 200 "vLLM proxy healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # 내부 Ollama 서비스 프록시
    server {
        listen 80;
        server_name ollama.internal.local;

        # 내부 네트워크에서만 접근 허용
        allow 172.20.0.0/16;
        allow 127.0.0.1;
        deny all;

        location / {
            proxy_pass http://ollama_internal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 허용
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        location /health {
            access_log off;
            return 200 "Ollama proxy healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # 외부 API 차단 서버 (기본)
    server {
        listen 80 default_server;
        server_name _;

        # 모든 외부 API 요청을 차단
        location / {
            # 요청 로깅
            access_log /var/log/nginx/blocked.log firewall;
            
            # 차단 응답
            return 403 '{"error": "Blocked by firewall", "message": "External API access is not allowed in ON_PREM mode", "blocked_url": "$request_uri"}';
            add_header Content-Type application/json;
        }

        # 파이어월 상태 확인
        location /firewall/status {
            access_log off;
            return 200 '{"status": "active", "mode": "ON_PREM", "allowed_networks": ["172.20.0.0/16", "127.0.0.1"]}';
            add_header Content-Type application/json;
        }
    }

    # HTTPS 리다이렉션 및 차단
    server {
        listen 443 ssl default_server;
        server_name _;
        
        # 자체 서명 인증서 (테스트용)
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        
        # SSL 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            access_log /var/log/nginx/blocked_ssl.log firewall;
            return 403 '{"error": "HTTPS blocked", "message": "External HTTPS access is not allowed in ON_PREM mode"}';
            add_header Content-Type application/json;
        }
    }
} 