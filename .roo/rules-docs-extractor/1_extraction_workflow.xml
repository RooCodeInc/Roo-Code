<extraction_workflow>
  <mode_overview>
    The Docs Extractor mode performs comprehensive analysis of features and components
    to generate multi-audience documentation. It extracts technical details, business logic,
    user workflows, and all related information to create documentation suitable for
    end-users, developers, administrators, and stakeholders.
  </mode_overview>

  <initialization_phase>
    <step number="1">
      <title>Understand Documentation Scope</title>
      <actions>
        <action>Identify the specific feature or component to document</action>
        <action>Determine target audiences for the documentation</action>
        <action>Establish documentation depth requirements</action>
      </actions>
      <tool_use><![CDATA[
<ask_followup_question>
<question>What specific feature or component should I extract documentation for?</question>
<follow_up>
<suggest>User authentication and authorization system</suggest>
<suggest>API endpoints for a specific module</suggest>
<suggest>Database schema and data models</suggest>
<suggest>Frontend component library</suggest>
</follow_up>
</ask_followup_question>
      ]]></tool_use>
    </step>

    <step number="2">
      <title>Initial Feature Discovery</title>
      <actions>
        <action>Use semantic search to find all related code</action>
        <action>Identify entry points and main components</action>
        <action>Map high-level architecture</action>
      </actions>
      <tool_use><![CDATA[
<codebase_search>
<query>[feature name] implementation main entry point</query>
</codebase_search>
      ]]></tool_use>
    </step>
  </initialization_phase>

  <analysis_phases>
    <phase name="code_analysis">
      <title>Technical Implementation Analysis</title>
      <steps>
        <step>
          <action>Analyze source code structure</action>
          <details>
            - Identify classes, functions, and modules
            - Extract method signatures and parameters
            - Document return types and data structures
            - Map inheritance and composition relationships
          </details>
        </step>
        <step>
          <action>Extract API specifications</action>
          <details>
            - REST endpoints with methods and parameters
            - GraphQL schemas and resolvers
            - WebSocket events and handlers
            - RPC interfaces and protocols
          </details>
        </step>
        <step>
          <action>Document configuration options</action>
          <details>
            - Environment variables
            - Configuration files and schemas
            - Feature flags and toggles
            - Runtime parameters
          </details>
        </step>
      </steps>
    </phase>

    <phase name="business_logic_analysis">
      <title>Business Logic and Workflow Extraction</title>
      <steps>
        <step>
          <action>Map user workflows</action>
          <details>
            - User journey through the feature
            - Decision points and branching logic
            - State transitions and lifecycle
            - User roles and permissions
          </details>
        </step>
        <step>
          <action>Document business rules</action>
          <details>
            - Validation logic and constraints
            - Calculation formulas and algorithms
            - Business process implementations
            - Compliance and regulatory requirements
          </details>
        </step>
        <step>
          <action>Identify use cases</action>
          <details>
            - Primary use cases and scenarios
            - Edge cases and special conditions
            - Error scenarios and recovery
            - Performance considerations
          </details>
        </step>
      </steps>
    </phase>

    <phase name="integration_analysis">
      <title>Dependencies and Integration Analysis</title>
      <steps>
        <step>
          <action>Map external dependencies</action>
          <details>
            - Third-party libraries and versions
            - External services and APIs
            - Database connections and schemas
            - Message queues and event systems
          </details>
        </step>
        <step>
          <action>Document integration points</action>
          <details>
            - Incoming webhooks and callbacks
            - Outgoing API calls
            - Event publishers and subscribers
            - Shared data stores and caches
          </details>
        </step>
        <step>
          <action>Analyze data flow</action>
          <details>
            - Input data sources and formats
            - Data transformations and mappings
            - Output formats and destinations
            - Data retention and lifecycle
          </details>
        </step>
      </steps>
    </phase>

    <phase name="quality_analysis">
      <title>Quality and Testing Analysis</title>
      <steps>
        <step>
          <action>Assess test coverage</action>
          <details>
            - Unit test coverage and quality
            - Integration test scenarios
            - End-to-end test flows
            - Performance test results
          </details>
        </step>
        <step>
          <action>Document error handling</action>
          <details>
            - Error types and codes
            - Exception handling strategies
            - Fallback mechanisms
            - Recovery procedures
          </details>
        </step>
        <step>
          <action>Identify quality metrics</action>
          <details>
            - Code complexity metrics
            - Performance benchmarks
            - Security vulnerability assessments
            - Maintainability indices
          </details>
        </step>
      </steps>
    </phase>

    <phase name="security_analysis">
      <title>Security and Compliance Analysis</title>
      <steps>
        <step>
          <action>Document security measures</action>
          <details>
            - Authentication mechanisms
            - Authorization and access control
            - Data encryption methods
            - Security headers and policies
          </details>
        </step>
        <step>
          <action>Identify vulnerabilities</action>
          <details>
            - Known security issues
            - Potential attack vectors
            - Mitigation strategies
            - Security best practices
          </details>
        </step>
        <step>
          <action>Compliance requirements</action>
          <details>
            - Regulatory compliance (GDPR, HIPAA, etc.)
            - Industry standards adherence
            - Audit trail requirements
            - Data privacy considerations
          </details>
        </step>
      </steps>
    </phase>
  </analysis_phases>

  <documentation_generation>
    <step number="1">
      <title>Structure Documentation</title>
      <actions>
        <action>Create comprehensive table of contents</action>
        <action>Organize content by audience type</action>
        <action>Establish cross-references and links</action>
      </actions>
    </step>

    <step number="2">
      <title>Generate Markdown Output</title>
      <actions>
        <action>Create DOCS-TEMP-[feature].md file</action>
        <action>Format content with proper markdown syntax</action>
        <action>Include code examples and diagrams</action>
        <action>Add metadata and version information</action>
      </actions>
    </step>

    <step number="3">
      <title>Add Supporting Elements</title>
      <actions>
        <action>Include troubleshooting guides</action>
        <action>Add FAQ sections</action>
        <action>Provide migration guides</action>
        <action>Document best practices</action>
      </actions>
    </step>
  </documentation_generation>

  <completion_criteria>
    <criterion>All code paths have been analyzed</criterion>
    <criterion>Business logic is fully documented</criterion>
    <criterion>Integration points are mapped</criterion>
    <criterion>Security considerations are addressed</criterion>
    <criterion>Documentation serves all target audiences</criterion>
    <criterion>Metadata and cross-references are complete</criterion>
  </completion_criteria>
</extraction_workflow>