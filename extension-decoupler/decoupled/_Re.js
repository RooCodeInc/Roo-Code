
	var Td = require("assert"),
		_re = require("net"),
		e8e = require("http"),
		op = Xt(),
		{ channels: u0 } = $m(),
		t8e = Qee(),
		r8e = zm(),
		{ InvalidArgumentError: pi, InformationalError: n8e, ClientDestroyedError: i8e } = Vr(),
		s8e = IE(),
		{
			kUrl: au,
			kServerName: zf,
			kClient: o8e,
			kBusy: lq,
			kConnect: a8e,
			kResuming: ap,
			kRunning: WE,
			kPending: GE,
			kSize: HE,
			kQueue: ac,
			kConnected: l8e,
			kConnecting: d0,
			kNeedDrain: Zf,
			kKeepAliveDefaultTimeout: Cre,
			kHostHeader: c8e,
			kPendingIdx: lc,
			kRunningIdx: Rd,
			kError: u8e,
			kPipelining: $B,
			kKeepAliveTimeoutValue: d8e,
			kMaxHeadersSize: f8e,
			kKeepAliveMaxTimeout: h8e,
			kKeepAliveTimeoutThreshold: g8e,
			kHeadersTimeout: p8e,
			kBodyTimeout: A8e,
			kStrictContentLength: m8e,
			kConnector: OE,
			kMaxRedirections: y8e,
			kMaxRequests: cq,
			kCounter: C8e,
			kClose: v8e,
			kDestroy: E8e,
			kDispatch: b8e,
			kInterceptors: vre,
			kLocalAddress: qE,
			kMaxResponseSize: x8e,
			kOnError: _8e,
			kHTTPContext: Ai,
			kMaxConcurrentStreams: w8e,
			kResume: VE,
		} = Qn(),
		I8e = ore(),
		S8e = gre(),
		Ere = !1,
		jf = Symbol("kClosedResolve"),
		bre = () => {}