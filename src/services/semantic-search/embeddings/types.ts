import { Vector } from "../vector-store/types"

export interface EmbeddingModel {
	/**
	 * Generate embeddings for a piece of text
	 */
	embed(text: string): Promise<Vector>

	/**
	 * Generate embeddings for multiple pieces of text in batch
	 */
	embedBatch(texts: string[]): Promise<Vector[]>

	/**
	 * Get the dimension of the embeddings generated by this model
	 */
	readonly dimension: number

	/**
	 * Initialize the model (download weights, etc.)
	 */
	initialize(): Promise<void>

	/**
	 * Check if the model is ready to generate embeddings
	 */
	isInitialized(): boolean
}

export interface ModelConfig {
	/**
	 * Path to store model files
	 */
	modelPath: string

	/**
	 * Maximum sequence length for input text
	 */
	maxSeqLength?: number

	/**
	 * Whether to normalize embeddings to unit length
	 */
	normalize?: boolean
}
