{
	"unknownError": "Unknown error",
	"authenticationFailed": "Failed to create embeddings: Authentication failed for {{provider}}. Please check your API key.",
	"failedWithStatus": "Failed to create embeddings after {{attempts}} attempts with {{provider}}: HTTP {{statusCode}} - {{errorMessage}}",
	"failedWithError": "Failed to create embeddings after {{attempts}} attempts: {{errorMessage}}",
	"failedMaxAttempts": "Failed to create embeddings after {{attempts}} attempts",
	"textExceedsTokenLimit": "Text at index {{index}} exceeds maximum token limit ({{itemTokens}} > {{maxTokens}}). Skipping.",
	"rateLimitRetry": "Rate limit hit, retrying in {{delayMs}}ms (attempt {{attempt}}/{{maxRetries}})",
	"rateLimitExhausted": "Rate limit exceeded for {{provider}} after {{attempts}} attempts. Please wait before retrying or check your API plan limits.",
	"textWithPrefixExceedsTokenLimit": "Text at index {{index}} with query prefix exceeds maximum token limit ({{estimatedTokens}} > {{maxTokens}}). Using original text without prefix.",
	"ollama": {
		"couldNotReadErrorBody": "Could not read error body",
		"requestFailed": "Ollama API request failed with status {{status}} {{statusText}}: {{errorBody}}",
		"invalidResponseStructure": "Invalid response structure from Ollama API: \"embeddings\" array not found or not an array.",
		"embeddingFailed": "Ollama embedding failed: {{message}}",
		"serviceNotRunning": "Ollama service is not running at {{baseUrl}}",
		"serviceUnavailable": "Ollama service is unavailable (status: {{status}})",
		"modelNotFound": "Ollama model not found: {{modelId}}",
		"modelNotEmbeddingCapable": "Ollama model is not embedding capable: {{modelId}}",
		"hostNotFound": "Ollama host not found: {{baseUrl}}"
	},
	"scanner": {
		"unknownErrorProcessingFile": "Unknown error processing file {{filePath}}",
		"unknownErrorDeletingPoints": "Unknown error deleting points for {{filePath}}",
		"failedToProcessBatchWithError": "Failed to process batch after {{maxRetries}} attempts: {{errorMessage}}"
	},
	"vectorStore": {
		"qdrantConnectionFailed": "Failed to connect to Qdrant vector database. Please ensure Qdrant is running and accessible at {{qdrantUrl}}. Error: {{errorMessage}}",
		"vectorDimensionMismatch": "Failed to update vector index for new model. Please try clearing the index and starting again. Details: {{errorMessage}}"
	},
	"validation": {
		"authenticationFailed": "Authentication failed for {{provider}}. Please check your API key in the settings.",
		"connectionFailed": "Failed to connect to the embedder service. Please check your connection settings and ensure the service is running.",
		"modelNotAvailable": "Model '{{modelId}}' is not available. Please verify the model exists and you have access to it.",
		"configurationError": "Invalid configuration for {{provider}}. Please review your settings.",
		"serviceUnavailable": "The embedder service is not available. Please ensure it is running and accessible.",
		"invalidEndpoint": "Invalid API endpoint{{#if endpoint}}: {{endpoint}}{{/if}}. Please check your URL configuration.",
		"invalidEmbedderConfig": "Invalid embedder configuration. Please check your settings.",
		"invalidApiKey": "Invalid API key. Please check your API key configuration.",
		"invalidBaseUrl": "Invalid base URL. Please check your URL configuration.",
		"invalidModel": "Invalid model. Please check your model configuration.",
		"invalidResponse": "Invalid response from embedder service. Please check your configuration.",
		"apiKeyRequired": "API key is required for this embedder",
		"baseUrlRequired": "Base URL is required for this embedder",
		"badRequest": "Bad request to {{provider}}{{#if endpoint}} at {{endpoint}}{{/if}}. Please check your configuration and request parameters.",
		"forbidden": "Access forbidden for {{provider}}. Please check your API key permissions and account status.",
		"rateLimitExceeded": "Rate limit exceeded for {{provider}}. Please wait before retrying or upgrade your API plan.",
		"serverError": "Server error from {{provider}} (HTTP {{status}}). The service may be experiencing issues. Please try again later.",
		"notImplemented": "The endpoint{{#if endpoint}} {{endpoint}}{{/if}} does not support embeddings. Please check if you're using the correct endpoint URL.",
		"clientError": "Client error with {{provider}} (HTTP {{status}}). Please check your configuration.",
		"hostNotFound": "Cannot resolve host{{#if endpoint}} for {{endpoint}}{{/if}}. Please check the URL and your network connection.",
		"connectionRefused": "Connection refused{{#if endpoint}} to {{endpoint}}{{/if}}. Please ensure the service is running and accessible.",
		"connectionTimeout": "Connection timeout{{#if endpoint}} to {{endpoint}}{{/if}}. The service may be slow or unreachable.",
		"noResponse": "No response received from {{provider}}. Please check your network connection.",
		"invalidResponseFormat": "Invalid response format from {{provider}}. The endpoint may not be compatible with the expected API format.",
		"apiKeyIssue": "API key issue with {{provider}}{{#if source}} (configured in {{source}}){{/if}}. Please verify your API key is correct and has the necessary permissions.",
		"modelIssue": "Model issue with {{provider}}{{#if modelId}} for model '{{modelId}}'{{/if}}. Please verify the model is available and supports embeddings.",
		"dimensionMismatch": "Vector dimension mismatch{{#if modelId}} for model '{{modelId}}'{{/if}}. The model's embedding dimensions don't match the existing index.",
		"unexpectedError": "Unexpected error with {{provider}}. Please check the logs for more details.",
		"checkNetworkAndVPN": "Check your network connection and VPN settings if applicable.",
		"checkServiceRunning": "Ensure the service is running and the port is not blocked by a firewall.",
		"checkFirewallProxy": "Check firewall settings and proxy configuration if behind a corporate network.",
		"checkNetworkStability": "Check your network stability and try again.",
		"checkEndpointCompatibility": "Verify the endpoint is compatible with OpenAI's embedding API format.",
		"clearIndexAndRestart": "Try clearing the index and restarting with the new model configuration.",
		"checkApiKeyInSettings": "Please verify your API key in Settings > Code Index.",
		"checkEndpointAndModel": "Please verify the endpoint URL and model '{{modelId}}' are correct.",
		"checkServiceAndNetwork": "Please ensure the service is running and check your network connection."
	},
	"serviceFactory": {
		"openAiConfigMissing": "OpenAI configuration missing. Please provide an API key in the Code Index settings.",
		"ollamaConfigMissing": "Ollama configuration missing. Please provide the Ollama base URL in the Code Index settings.",
		"openAiCompatibleConfigMissing": "OpenAI Compatible configuration missing. Please provide both base URL and API key in the Code Index settings.",
		"geminiConfigMissing": "Gemini configuration missing. Please provide an API key in the Code Index settings.",
		"mistralConfigMissing": "Mistral configuration missing. Please provide an API key in the Code Index settings.",
		"vercelAiGatewayConfigMissing": "Vercel AI Gateway configuration missing. Please provide an API key in the Code Index settings.",
		"invalidEmbedderType": "Invalid embedder type configured: '{{embedderProvider}}'. Please select a valid provider in the Code Index settings.",
		"vectorDimensionNotDeterminedOpenAiCompatible": "Could not determine vector dimension for model '{{modelId}}' with provider '{{provider}}'. Please ensure the 'Embedding Dimension' is correctly set in the OpenAI-Compatible provider settings.",
		"vectorDimensionNotDetermined": "Could not determine vector dimension for model '{{modelId}}' with provider '{{provider}}'. Check model profiles or configuration.",
		"qdrantUrlMissing": "Qdrant URL missing. Please configure the Qdrant vector database URL in the Code Index settings.",
		"codeIndexingNotConfigured": "Code indexing is not properly configured. Please complete the setup in Settings > Code Index.",
		"embeddingValidationFailed": "Failed to validate {{provider}} embedder: {{error}}. Please check your configuration and try again."
	},
	"orchestrator": {
		"indexingFailedNoBlocks": "Indexing failed: No code blocks were successfully indexed. This usually indicates an embedder configuration issue. Please check your API key, endpoint URL, and model settings.",
		"indexingFailedCritical": "Indexing failed: No code blocks were successfully indexed despite finding files to process. This indicates a critical embedder failure. Please verify your embedder configuration and API connectivity.",
		"fileWatcherStarted": "File watcher started.",
		"fileWatcherStopped": "File watcher stopped.",
		"failedDuringInitialScan": "Failed during initial scan: {{errorMessage}}. Please check your configuration and try again.",
		"unknownError": "Unknown error",
		"indexingRequiresWorkspace": "Indexing requires an open workspace folder. Please open a folder or workspace to enable code indexing."
	},
	"openai": {
		"invalidResponseFormat": "Invalid response format from OpenAI API. Please check your API key and model configuration."
	}
}
