name: Evals Quick Test

on:
    pull_request:
        branches: [main, develop]
        paths:
            - "packages/evals/**"
            - ".github/workflows/evals*.yml"
    workflow_dispatch:

env:
    DOCKER_BUILDKIT: 1
    COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
    test-docker-compose:
        name: Test Docker Compose Networking
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Create test environment
              run: |
                  cd packages/evals

                  # Create .env.local (required for Docker build)
                  cat > .env.local << EOF
                  OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY || 'test-key-for-build' }}
                  EOF

                  # Create development environment
                  cat > .env.development << EOF
                  NODE_ENV=development
                  DATABASE_URL=postgresql://postgres:password@db:5432/evals_development
                  REDIS_URL=redis://redis:6379
                  HOST_EXECUTION_METHOD=docker
                  EOF

            - name: Build images with cache
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: packages/evals/Dockerfile.web
                  tags: evals-web:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  push: false
                  load: true

            - name: Build runner image with cache
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: packages/evals/Dockerfile.runner
                  tags: evals-runner:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  push: false
                  load: true

            - name: Tag images for docker-compose
              run: |
                  cd packages/evals
                  docker tag evals-web:latest evals-web
                  docker tag evals-runner:latest evals-runner

            - name: Start server services
              run: |
                  cd packages/evals
                  docker compose --profile server up -d

            - name: Test service connectivity
              run: |
                  cd packages/evals

                  # Wait for services
                  echo "Waiting for PostgreSQL..."
                  timeout 60 bash -c 'until docker compose exec -T db pg_isready -U postgres; do sleep 2; done'

                  echo "Waiting for Redis..."
                  timeout 60 bash -c 'until docker compose exec -T redis redis-cli ping | grep -q PONG; do sleep 2; done'

                  # Test inter-container networking
                  echo "Testing database connection from web container..."
                  docker compose exec -T web sh -c 'nc -z db 5432 && echo "✓ Database connection successful"'

                  echo "Testing Redis connection from web container..."
                  docker compose exec -T web sh -c 'nc -z redis 6379 && echo "✓ Redis connection successful"'

                  # Test that web service can start (basic health check)
                  echo "Testing web service startup..."
                  timeout 30 bash -c 'until curl -f http://localhost:3000 2>/dev/null || curl -f http://localhost:3000/health 2>/dev/null; do sleep 2; done' || echo "Web service may not have health endpoint, continuing..."

            - name: Test runner container networking
              run: |
                  cd packages/evals

                  echo "Testing runner container can connect to services..."
                  docker compose run --rm runner sh -c 'nc -z db 5432 && echo "✓ Runner -> Database connection successful"'
                  docker compose run --rm runner sh -c 'nc -z redis 6379 && echo "✓ Runner -> Redis connection successful"'
                  docker compose run --rm runner sh -c 'nc -z web 3000 && echo "✓ Runner -> Web service connection successful"'

            - name: Verify Docker socket access
              run: |
                  cd packages/evals

                  echo "Testing Docker socket access in runner..."
                  docker compose run --rm runner docker --version
                  docker compose run --rm runner docker ps

            - name: Show service status
              if: always()
              run: |
                  cd packages/evals

                  echo "=== Service Status ==="
                  docker compose ps

                  echo "=== Network Information ==="
                  docker network ls | grep evals || echo "No evals network found"

                  echo "=== Container Information ==="
                  docker compose exec -T db sh -c 'echo "Database container hostname: $(hostname)"'
                  docker compose exec -T redis sh -c 'echo "Redis container hostname: $(hostname)"'

            - name: Run sample evaluation
              run: |
                  cd packages/evals
                  docker compose run --rm runner pnpm --filter @roo-code/evals cli --ci

            - name: Cleanup
              if: always()
              run: |
                  cd packages/evals
                  docker compose down -v --remove-orphans
